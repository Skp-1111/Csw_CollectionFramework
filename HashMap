
/*It provides the basic implementation of the Map interface of Java. HashMap in Java stores the data in (Key, Value) pairs,
and you can access them by an index of another type (e.g. an Integer). One object is used as a key (index) to another object (value).
If you try to insert the duplicate key in HashMap, it will replace the element of the corresponding key. 

What is HashMap?
Java HashMap is similar to HashTable, but it is unsynchronized. It allows to store the null keys as well, 
but there should be only one null key object and there can be any number of null values. 
This class makes no guarantees as to the order of the map. To use this class and its methods, you need to import java.util.HashMap package or its superclass.*/




import java.util.HashMap;
import java.util.Map;
public class HashMap1 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
HashMap<Integer,String> hm=new HashMap<Integer,String>();
System.out.println("INITIAL LIST OF ELEMENTS : "+hm);

hm.put(100,"Amit");
hm.put(101,"Vijay");
hm.put(null,null);

hm.put(null,"Rahul");
System.out.println("After invoking put() methord ");
for(Map.Entry m : hm.entrySet()) {
	System.out.println(m.getKey()+" "+m.getValue());
}
System.out.println("Initial list of elements: "+hm);

hm.remove(101);
System.out.println("Updated list of elements: "+hm);

hm.remove(102,"Rahul");
System.out.println("Updataed list of elements: "+hm);

	}
}
